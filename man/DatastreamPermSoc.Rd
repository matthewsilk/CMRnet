% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMRdatastreamperm_soc.R
\name{DatastreamPermSoc}
\alias{DatastreamPermSoc}
\title{DatastreamPermSoc}
\usage{
DatastreamPermSoc(data, intwindow, mindate, maxdate, netwindow, overlap,
  spacewindow, same.time, time.restrict, same.spat, spat.restrict, n.swaps,
  n.rand, burnin, n.burnin, iter)
}
\arguments{
\item{data}{A 5 column dataframe with columns for the ID of the captured individual, the location of its capture (a name or number), the x coordinate of its capture location, the y coordinate of the capture location, and the date of capture}

\item{intwindow}{The maximum period of time (in days) between two co-captures (i.e. if intwindow = 10 then two individuals captured 10 days apart could be considered co-captured but two indivviduals captured 11 days apart couldn't)}

\item{mindate}{The start date ("YYYY-MM-DD") of the study (i.e. when you want to build networks from)}

\item{maxdate}{The end date ("YYYY-MM-DD") of the study (i.e. when you want to build networks until). Please provide as the day after the last day of the study.}

\item{netwindow}{The period of time over which each network is built in months (i.e. netwindow=12 would correspond to yearly networks)}

\item{overlap}{The amount of overlap between netwindows in months (i.e. overlap=2 would result in a second network window starting 2 months before the end of the first). Overlap=0 ensures no overlap between successive network windows}

\item{spacewindow}{The maximum distance between locations that can be classed as a co-capture (calculated using the coordinate system provided in in the input dataset). Best used when multiple capture locations occur very close together}

\item{same.time}{(TRUE/FALSE) Whether swaps should be restricted to only occur betwen individuals trapped on the same date or not}

\item{time.restrict}{Provided as a number of months. Imposes time restrictions on when swaps can take place so that individuals can only be swapped with those a fixed time before or after being captured}

\item{same.spat}{(TRUE/FALSE) Whether swaps should be restricted to only occur between individuals trapped at the same location}

\item{spat.restrict}{Provided on the same scale as the coordinates in the input dataset. Imposes space restrictions on when swaps can take place so that individuals can only be swapped with those captued within a fixed distance}

\item{n.swaps}{The number of swaps between each random network being extracted (e.g. n.swaps = 10 would equate to 10 swaps taking place between each random network being saved)}

\item{n.rand}{The number of randomised networks to be generated}

\item{burnin}{(TRUE/FALSE) Whether burnin is required}

\item{n.burnin}{The number of swaps to discard as burn-in before the first random network is created. The total number of swaps conducted is thus n.burnin+n.swaps*n.rand}

\item{iter}{(TRUE/FALSE) Whether iterative randomisations are being used. If TRUE then D.rand is also returned}
}
\description{
This function creates randomised social networks for each network window using datastream permutations with user-defined restrictions (to constrain swaps according to temporal or spatial windows)
}
\examples{
data(cmr_dat)
mindate<-"2010-01-01"
maxdate<-"2015-01-01"
intwindow<-60
netwindow<-12
overlap<-0
spacewindow<-0
netdat<-DynamicNetCreate(data=cmr_dat,intwindow=intwindow,mindate=mindate,maxdate=maxdate,netwindow=netwindow,overlap=overlap,spacewindow=spacewindow)

same.time=FALSE
time.restrict=6
same.spat=FALSE
spat.restrict="n"
n.swaps=10
n.rand=100
n.burnin=100

Rs<-DatastreamPermSoc(data=cmr_dat,intwindow,mindate,maxdate,netwindow,overlap,spacewindow,same.time,time.restrict,same.spat,spat.restrict,n.swaps,n.rand,burnin=TRUE,n.burnin,iter=FALSE)
}
