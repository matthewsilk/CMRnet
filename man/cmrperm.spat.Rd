% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMRdatastreamspatswap.R
\name{cmrperm.spat}
\alias{cmrperm.spat}
\title{cmrperm.soc}
\usage{
cmrperm.spat(D, same.time, time.restrict, same.id, n.swaps, n.rand, burnin,
  n.burnin, warn.thresh)
}
\arguments{
\item{D}{The input dataset to be randomised}

\item{same.time}{(TRUE/FALSE) Whether swaps should be restricted to only occur betwen individuals trapped on the same date or not}

\item{time.restrict}{Provided as a number of months. Imposes time restrictions on when swaps can take place so that individuals can only be swapped with those a fixed time before or after being captured}

\item{n.swaps}{The number of swaps between each random network being extracted (e.g. n.swaps = 10 would equate to 10 swaps taking place between each random network being saved)}

\item{n.rand}{The number of randomised networks to be generated}

\item{burnin}{(TRUE/FALSE) Whether burnin is required}

\item{n.burnin}{The number of swaps to discard as burn-in before the first random network is created. The total number of swaps conducted is thus n.burnin+n.swaps*n.rand}

\item{warn.thresh}{The number of times no matches are found (i.e. constraints on randomisations are too restrictive) before the function is stopped and an error message returned}

\item{same.spat}{(TRUE/FALSE) Whether swaps should be restricted to only occur between individuals trapped at the same location}

\item{spat.restrict}{Provided on the same scale as the coordinates in the input dataset. Imposes space restrictions on when swaps can take place so that individuals can only be swapped with those captued within a fixed distance}
}
\description{
An internal function that operate within the DatastreamPermSpat function
}
\examples{
data(cmr_dat)
mindate<-"2010-01-01"
maxdate<-"2015-01-01"
intwindow<-60
netwindow<-12
overlap<-0
movenetdat<-MoveNetCreate(data=cmr_dat,intwindow=intwindow,mindate=mindate,maxdate=maxdate,netwindow=netwindow,overlap=overlap,nextonly=TRUE)

same.time=FALSE
time.restrict=6
same.id=FALSE
n.swaps=10
n.rand=100
n.burnin=100
warn.thresh=100

Rs<-DatastreamPermSpat(data=cmr_dat,intwindow,mindate,maxdate,netwindow,overlap,same.time,time.restrict,same.id,n.swaps,n.rand,burnin=TRUE,n.burnin,warn.thresh)
}
